# -*- coding: utf-8 -*-
from __future__ import print_function
import datetime as dt
import logging

from . import Property, PropertyDefinition
from . import FHIRBase, Element, Extension

{% if r.name != 'BackboneElement' and classes|length > 0 %}
from .backboneelement import BackboneElement
{% endif %}
{% if r.superclass not in ['object', 'FHIRBase', 'Element', 'Extension'] %}
from .{{r.superclass.lower()}} import {{r.superclass}}
{% endif %}

{% for t in r.required_basic_types %}
from ._{{t|lower}} import {{t}}
{% endfor %}

{% for t in r.required_complex_types if t not in ['Element', 'Extension'] %}
from .{{t|lower}} import {{t}}
{% endfor %}

__author__ = "Melle Sieswerda"
__copyright__  = "Copyright 2017, Melle Sieswerda"
__license__ = "GPL"
__version__ = "0.8"

__all__ = ['{{r.name}}']


{% for ic in classes.values() %}
class {{ic.name}}({{ic.superclass}}):
    """Autogenerated class for implicit type."""
    {% for a in ic.attributes.values() %}
        {% if a.type is string %}
    {{a.name}} = Property(PropertyDefinition('{{a.name}}', '{{a.type}}', '{{a.min}}', '{{a.max}}'))    
        {% else %}
    {{a.name}} = Property(PropertyDefinition('{{a.name}}', {{a.type}}, '{{a.min}}', '{{a.max}}'))    
        {% endif %}
    {% endfor %}

{% endfor %}
# ------------------------------------------------------------------------------
# {{r.name}}
# ------------------------------------------------------------------------------
class {{r.name}}({{r.superclass}}):
    """
    {% for line in r.docstring %}
    {{line}}
    {% endfor %}
    
    Autogenerated class.
    """
    _url = '{{r.url}}'
    
    {% for a in r.attributes.values() %}
    {{a.name}} = Property(PropertyDefinition('{{a.name}}', {{a.type}}, '{{a.min}}', '{{a.max}}'))
    {% endfor %}
    
